{"is_source_file": true, "format": "Python", "description": "This file defines classes and functions for configuring, instantiating, and interacting with AI/NLP providers for medical triage and note generation. It includes mock behavior for testing, and methods for asking follow-up questions, generating summaries, and validating connectivity.", "external_files": ["os", "requests"], "external_methods": ["os.getenv"], "published": ["AIConfig", "AIClientError", "AIClient"], "classes": [{"name": "AIConfig", "description": "Holds configuration details for AI/NLP providers, supports loading from environment variables, and validation."}, {"name": "AIClientError", "description": "Custom exception class for AI client errors."}, {"name": "AIClient", "description": "Core class providing methods to interact with different AI providers, including mock responses, follow-up question generation, summarization, and connectivity checks."}], "methods": [{"name": "\"AIConfig\" from_env()", "description": "Loads AI configuration parameters from environment variables, with defaults for provider, model, and API base.", "scope": "AIConfig", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] validate(self)", "description": "Validates configuration, ensuring required fields are set depending on provider.", "scope": "AIConfig", "scopeKind": "class"}, {"name": "None __init__(self, cfg: Optional[AIConfig] = None)", "description": "Initializes AIClient with given or environment-based configuration.", "scope": "AIClient", "scopeKind": "class"}, {"name": "dict _headers(self)", "description": "Generates appropriate HTTP headers for API requests based on provider.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str _endpoint(self)", "description": "Constructs provider-specific API endpoint URL.", "scope": "AIClient", "scopeKind": "class"}, {"name": "dict _post(self, payload: dict)", "description": "Performs HTTP POST to the AI provider API, or generates mock responses based on input dialogue.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str ask_follow_up(self, dialogue: List[dict])", "description": "Generates a single follow-up question or conclusion based on dialogue context, with mock deterministic behavior for testing.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str summarize_dialogue(self, dialogue: List[dict], patient_id: str)", "description": "Creates a concise clinical note from a dialogue transcript.", "scope": "AIClient", "scopeKind": "class"}, {"name": "Dict[str,Any] live_check(self)", "description": "Checks connectivity and credentials to the AI provider, returning success status and diagnostics.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str choose(*options: str)", "scope": "AIClient.ask_follow_up", "scopeKind": "member", "description": "unavailable"}], "calls": ["os.getenv", "requests.post"], "search-terms": ["ai.py", "AIConfig", "AIClient", "mock", "follow-up question", "clinical summarization", "environment variables", "AI provider", "mock responses", "AI API configuration"], "state": 2, "file_id": 23, "knowledge_revision": 127, "git_revision": "181d15a785e35472029c6a98c86ed5148c03ee24", "revision_history": [{"74": ""}, {"82": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}, {"107": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}, {"112": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}, {"122": "d6ac3ac7d570d586ad65b61d3d4f5af96b4d21c0"}, {"123": "d6ac3ac7d570d586ad65b61d3d4f5af96b4d21c0"}, {"124": "181d15a785e35472029c6a98c86ed5148c03ee24"}, {"127": "181d15a785e35472029c6a98c86ed5148c03ee24"}], "ctags": [{"_type": "tag", "name": "AIClient", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AIClientError", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIClientError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AIConfig", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIConfig:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def __init__(self, cfg: Optional[AIConfig] = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, cfg: Optional[AIConfig] = None)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_endpoint", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _endpoint(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _headers(self) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_post", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _post(self, payload: dict) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self, payload: dict)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "ask_follow_up", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def ask_follow_up(self, dialogue: List[dict]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, dialogue: List[dict])", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "choose", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^            def choose(*options: str) -> str:$/", "file": true, "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(*options: str)", "scope": "AIClient._post", "scopeKind": "member"}, {"_type": "tag", "name": "choose", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^            def choose(*options: str) -> str:$/", "file": true, "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(*options: str)", "scope": "AIClient.ask_follow_up", "scopeKind": "member"}, {"_type": "tag", "name": "from_env", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def from_env() -> \"AIConfig\":$/", "language": "Python", "typeref": "typename:\"AIConfig\"", "kind": "member", "signature": "()", "scope": "AIConfig", "scopeKind": "class"}, {"_type": "tag", "name": "live_check", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def live_check(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "summarize_dialogue", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def summarize_dialogue(self, dialogue: List[dict], patient_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, dialogue: List[dict], patient_id: str)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def validate(self) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "AIConfig", "scopeKind": "class"}], "hash": "be7a57af4be1df9419ecdfa109498808", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/ai.py"}