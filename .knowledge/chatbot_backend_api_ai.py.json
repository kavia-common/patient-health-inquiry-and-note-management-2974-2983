{"is_source_file": true, "format": "Python", "description": "This file provides a client library for interacting with AI/NLP providers, including configuration, request handling, and specific methods for follow-up questions, dialogue summarization, and connectivity testing within a clinical/healthcare context.", "external_files": ["os", "dataclasses", "typing", "requests"], "external_methods": ["os.getenv", "requests.post"], "published": ["AIConfig", "AIClientError", "AIClient"], "classes": [{"name": "AIConfig", "description": "Holds configuration details for AI/NLP providers, including provider type, API keys, and model info, with methods to load from environment and validate."}, {"name": "AIClientError", "description": "Custom exception class for errors encountered by AIClient."}, {"name": "AIClient", "description": "A wrapper class that manages interactions with AI providers, supporting request creation, online diagnostics, follow-up question generation, and dialogue summarization."}], "methods": [{"name": "\"AIConfig\" from_env()", "description": "Class method to instantiate AIConfig by loading environment variables.", "scope": "AIConfig", "scopeKind": "class"}, {"name": "Tuple[bool,Dict[str,Any]] validate(self)", "description": "Instance method to check configuration correctness and provide helpful hints.", "scope": "AIConfig", "scopeKind": "class"}, {"name": "None __init__(self, cfg: Optional[AIConfig] = None)", "description": "Initializer for AIClient; sets up configuration.", "scope": "AIClient", "scopeKind": "class"}, {"name": "dict _headers(self)", "description": "Internal method to generate HTTP headers based on provider.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str _endpoint(self)", "description": "Internal method to determine the correct API endpoint URL based on provider and configuration.", "scope": "AIClient", "scopeKind": "class"}, {"name": "dict _post(self, payload: dict)", "description": "Internal method to send HTTP POST request to the AI provider API, or generate mock responses.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str ask_follow_up(self, dialogue: List[dict])", "description": "Generates a follow-up health-related question based on dialogue context.", "scope": "AIClient", "scopeKind": "class"}, {"name": "str summarize_dialogue(self, dialogue: List[dict], patient_id: str)", "description": "Creates a concise clinical summary note from a conversation transcript.", "scope": "AIClient", "scopeKind": "class"}, {"name": "Dict[str,Any] live_check(self)", "description": "Performs a lightweight request to verify connectivity and credentials with the AI provider.", "scope": "AIClient", "scopeKind": "class"}], "calls": ["requests.post"], "search-terms": ["AIConfig", "AIClient", "chat/completions", "medical scribe", "clinical intake", "health-related follow-up", "dialogue summarization", "AI provider configuration"], "state": 2, "file_id": 23, "knowledge_revision": 112, "git_revision": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc", "revision_history": [{"74": ""}, {"82": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}, {"107": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}, {"112": "d0cd5b1f677e611fe35f99c75e3e64c84fb825cc"}], "ctags": [{"_type": "tag", "name": "AIClient", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AIClientError", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIClientError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AIConfig", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^class AIConfig:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def __init__(self, cfg: Optional[AIConfig] = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, cfg: Optional[AIConfig] = None)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_endpoint", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _endpoint(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _headers(self) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "_post", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def _post(self, payload: dict) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self, payload: dict)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "ask_follow_up", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def ask_follow_up(self, dialogue: List[dict]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, dialogue: List[dict])", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "from_env", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def from_env() -> \"AIConfig\":$/", "language": "Python", "typeref": "typename:\"AIConfig\"", "kind": "member", "signature": "()", "scope": "AIConfig", "scopeKind": "class"}, {"_type": "tag", "name": "live_check", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def live_check(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "summarize_dialogue", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def summarize_dialogue(self, dialogue: List[dict], patient_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, dialogue: List[dict], patient_id: str)", "scope": "AIClient", "scopeKind": "class"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/ai.py", "pattern": "/^    def validate(self) -> Tuple[bool, Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "AIConfig", "scopeKind": "class"}], "hash": "dbd8bdb00cffe2778549392d9f2423ff", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/ai.py"}