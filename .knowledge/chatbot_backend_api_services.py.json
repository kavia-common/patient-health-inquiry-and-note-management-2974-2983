{"is_source_file": true, "format": "Python", "description": "A Django-based Python module providing services for managing medical conversations, notes generation, local storage, and AI-driven dynamic questioning within a healthcare application.", "external_files": ["django.utils", ".models", ".ai"], "external_methods": ["Conversation.objects.create", "Conversation.objects.get", "Message.objects.create", "timezone.now"], "published": ["ConversationManager", "NoteGenerator", "LocalNoteStorage", "LocalNoteStorageError", "AIConversationHelper"], "classes": [{"name": "ConversationManager", "description": "Handles creation, appending, and retrieval of conversations."}, {"name": "NoteGenerator", "description": "Generates medical notes from conversations, using AI summarization or heuristic fallback."}, {"name": "LocalNoteStorage", "description": "Handles saving notes as text files in a local (or synced cloud) directory."}, {"name": "AIConversationHelper", "description": "Facilitates AI-informed follow-up questioning for clinical intake processes."}], "methods": [{"name": "Conversation start_conversation(self, patient_id: str, metadata: dict | None = None)", "description": "Initiates a new conversation for a given patient ID with optional metadata.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Conversation append_messages(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]])", "description": "Adds a list of messages to an existing conversation identified by ID.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Conversation get_conversation(self, conversation_id: uuid.UUID)", "description": "Retrieves a complete conversation by ID.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Tuple[str,str] generate_note(self, conversation: Conversation, note_title: str = \"\")", "description": "Creates a summarized note from a conversation, via AI or heuristic fallback.", "scope": "NoteGenerator", "scopeKind": "class"}, {"name": "dict save_text_file(self, filename: str, content: str)", "description": "Saves text content to a file in a specified directory, returning details of the saved file.", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"name": "str next_follow_up(self, conversation: Conversation)", "description": "Determines the next clinical question or concludes the intake based on conversation context, using AI assistance.", "scope": "AIConversationHelper", "scopeKind": "class"}, {"name": "None __init__(self, ai: AIClient | None = None)", "scope": "NoteGenerator", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, base_dir: str | None = None)", "scope": "LocalNoteStorage", "scopeKind": "class", "description": "unavailable"}, {"name": "list[dict] _build_dialogue(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "str|None _determine_next_domain(self, meta: dict, patient_texts: list[str])", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "dict _init_metadata(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "bool _should_conclude(self, meta: dict, next_domain: str | None)", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "None _update_coverage(self, meta: dict, next_domain: str | None)", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "bool is_meaningful(text: str)", "scope": "AIConversationHelper._determine_next_domain", "scopeKind": "member", "description": "unavailable"}], "calls": ["Conversation.objects.create", "Conversation.objects.get", "Message.objects.create", "timezone.now", "self.ai.summarize_dialogue", "self.ai.ask_follow_up", "os.makedirs", "open", "conversation.save", "conversation.metadata"], "search-terms": ["ConversationManager", "NoteGenerator", "AIConversationHelper", "local storage notes", "clinical intake questions", "generate medical notes", "AI summarization fallback", "manage conversations", "medical conversation services"], "state": 2, "file_id": 20, "knowledge_revision": 140, "git_revision": "a086d62b1ec015d7c2949094cf0a9dbf3d8846bb", "revision_history": [{"42": ""}, {"55": "075d7988a9ee9cdb57b7dd73f7960809eb2312ef"}, {"60": "075d7988a9ee9cdb57b7dd73f7960809eb2312ef"}, {"75": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"76": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"80": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"111": "6500936dec2ed4b60f4e119fa86646bee7a7d73b"}, {"125": "6500936dec2ed4b60f4e119fa86646bee7a7d73b"}, {"126": "6500936dec2ed4b60f4e119fa86646bee7a7d73b"}, {"134": "39e634f39ccd5ccf738212dbb6fe07f7de1cf821"}, {"135": "39e634f39ccd5ccf738212dbb6fe07f7de1cf821"}, {"136": "4083a1d714f9fdf764358562bc32567a2429c949"}, {"137": "a086d62b1ec015d7c2949094cf0a9dbf3d8846bb"}, {"140": "a086d62b1ec015d7c2949094cf0a9dbf3d8846bb"}], "ctags": [{"_type": "tag", "name": "AIConversationHelper", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class AIConversationHelper:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConversationManager", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class ConversationManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DOMAIN_PLAN", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    DOMAIN_PLAN = [$/", "language": "Python", "kind": "variable", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "LocalNoteStorage", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class LocalNoteStorage:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LocalNoteStorageError", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class LocalNoteStorageError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "MIN_COVERAGE_FOR_CONCLUSION", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    MIN_COVERAGE_FOR_CONCLUSION = 6$/", "language": "Python", "kind": "variable", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "NoteGenerator", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class NoteGenerator:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, ai: AIClient | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, ai: AIClient | None = None)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, ai: AIClient | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, ai: AIClient | None = None)", "scope": "NoteGenerator", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, base_dir: str | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_dir: str | None = None)", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"_type": "tag", "name": "_build_dialogue", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def _build_dialogue(self, conversation: Conversation) -> list[dict]:$/", "language": "Python", "typeref": "typename:list[dict]", "kind": "member", "signature": "(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "_determine_next_domain", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def _determine_next_domain(self, meta: dict, patient_texts: list[str]) -> str | None:$/", "language": "Python", "typeref": "typename:str|None", "kind": "member", "signature": "(self, meta: dict, patient_texts: list[str])", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "_init_metadata", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def _init_metadata(self, conversation: Conversation) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "_should_conclude", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def _should_conclude(self, meta: dict, next_domain: str | None) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, meta: dict, next_domain: str | None)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "_update_coverage", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def _update_coverage(self, meta: dict, next_domain: str | None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, meta: dict, next_domain: str | None)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "append_messages", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def append_messages(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]]) -> Co/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]])", "scope": "ConversationManager", "scopeKind": "class"}, {"_type": "tag", "name": "generate_note", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def generate_note(self, conversation: Conversation, note_title: str = \"\") -> Tuple[str, str]/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "member", "signature": "(self, conversation: Conversation, note_title: str = \"\")", "scope": "NoteGenerator", "scopeKind": "class"}, {"_type": "tag", "name": "get_conversation", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def get_conversation(self, conversation_id: uuid.UUID) -> Conversation:$/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, conversation_id: uuid.UUID)", "scope": "ConversationManager", "scopeKind": "class"}, {"_type": "tag", "name": "is_meaningful", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^        def is_meaningful(text: str) -> bool:$/", "file": true, "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(text: str)", "scope": "AIConversationHelper._determine_next_domain", "scopeKind": "member"}, {"_type": "tag", "name": "next_follow_up", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def next_follow_up(self, conversation: Conversation) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "save_text_file", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def save_text_file(self, filename: str, content: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self, filename: str, content: str)", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"_type": "tag", "name": "start_conversation", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def start_conversation(self, patient_id: str, metadata: dict | None = None) -> Conversation:$/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, patient_id: str, metadata: dict | None = None)", "scope": "ConversationManager", "scopeKind": "class"}], "hash": "6d5ae4d2c26d9c7557ed5bf8a40be56d", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/services.py", "fields": [{"name": "DOMAIN_PLAN = [", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}, {"name": "MIN_COVERAGE_FOR_CONCLUSION = 6", "scope": "AIConversationHelper", "scopeKind": "class", "description": "unavailable"}]}