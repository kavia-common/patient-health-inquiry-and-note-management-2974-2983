{"is_source_file": true, "format": "Python", "description": "This file contains service classes for managing conversations, generating notes using AI or heuristics, saving notes locally, and providing AI-based follow-up questions in a healthcare-oriented chatbot system. It defines multiple classes with public interfaces for core functionalities related to patient conversation management and note generation.", "external_files": [".models", ".ai"], "external_methods": ["Conversation.objects.create", "Conversation.objects.get", "Message.objects.create", "Conversation.objects.all", "self.ai.summarize_dialogue", "self.ai.ask_follow_up"], "published": ["ConversationManager", "NoteGenerator", "LocalNoteStorageError", "LocalNoteStorage", "AIConversationHelper"], "classes": [{"name": "ConversationManager", "description": "Handles creation, retrieval, and updating of conversation objects, managing messages associated with conversations."}, {"name": "NoteGenerator", "description": "Generates disease notes from conversations either via AI summarization or heuristic fallback."}, {"name": "LocalNoteStorageError", "description": "Custom exception raised when saving notes locally fails."}, {"name": "LocalNoteStorage", "description": "Handles saving text notes to a local or configured directory, with environment variable configuration."}, {"name": "AIConversationHelper", "description": "Uses AI to generate dynamic follow-up questions based on conversation context."}], "methods": [{"name": "Conversation start_conversation(self, patient_id: str, metadata: dict | None = None)", "description": "Starts a new conversation for a given patient with optional metadata.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Conversation append_messages(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]])", "description": "Appends a list of messages to an existing conversation.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Conversation get_conversation(self, conversation_id: uuid.UUID)", "description": "Retrieves a conversation by ID.", "scope": "ConversationManager", "scopeKind": "class"}, {"name": "Tuple[str,str] generate_note(self, conversation: Conversation, note_title: str = \"\")", "description": "Generates a disease note from a conversation, using AI summarization or heuristic fallback.", "scope": "NoteGenerator", "scopeKind": "class"}, {"name": "dict save_text_file(self, filename: str, content: str)", "description": "Saves the provided content as a text file in the configured directory.", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"name": "str next_follow_up(self, conversation: Conversation)", "description": "Generates the next follow-up question based on conversation content.", "scope": "AIConversationHelper", "scopeKind": "class"}, {"name": "None __init__(self, ai: AIClient | None = None)", "scope": "NoteGenerator", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, base_dir: str | None = None)", "scope": "LocalNoteStorage", "scopeKind": "class", "description": "unavailable"}], "calls": ["Conversation.objects.create", "Conversation.objects.get", "Message.objects.create", "conversation.messages.all", "self.ai.summarize_dialogue", "self.ai.ask_follow_up"], "search-terms": ["ConversationManager", "NoteGenerator", "LocalNoteStorage", "AIConversationHelper", "generate_note", "save_text_file", "next_follow_up"], "state": 2, "file_id": 20, "knowledge_revision": 111, "git_revision": "6500936dec2ed4b60f4e119fa86646bee7a7d73b", "revision_history": [{"42": ""}, {"55": "075d7988a9ee9cdb57b7dd73f7960809eb2312ef"}, {"60": "075d7988a9ee9cdb57b7dd73f7960809eb2312ef"}, {"75": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"76": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"80": "f05fa2ba43f3f70d8aab80d7470b94d1314d1de0"}, {"111": "6500936dec2ed4b60f4e119fa86646bee7a7d73b"}], "ctags": [{"_type": "tag", "name": "AIConversationHelper", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class AIConversationHelper:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConversationManager", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class ConversationManager:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LocalNoteStorage", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class LocalNoteStorage:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LocalNoteStorageError", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class LocalNoteStorageError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteGenerator", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^class NoteGenerator:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, ai: AIClient | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, ai: AIClient | None = None)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, ai: AIClient | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, ai: AIClient | None = None)", "scope": "NoteGenerator", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def __init__(self, base_dir: str | None = None) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_dir: str | None = None)", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"_type": "tag", "name": "append_messages", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def append_messages(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]]) -> Co/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, conversation_id: uuid.UUID, messages: List[Tuple[str, str]])", "scope": "ConversationManager", "scopeKind": "class"}, {"_type": "tag", "name": "generate_note", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def generate_note(self, conversation: Conversation, note_title: str = \"\") -> Tuple[str, str]/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "member", "signature": "(self, conversation: Conversation, note_title: str = \"\")", "scope": "NoteGenerator", "scopeKind": "class"}, {"_type": "tag", "name": "get_conversation", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def get_conversation(self, conversation_id: uuid.UUID) -> Conversation:$/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, conversation_id: uuid.UUID)", "scope": "ConversationManager", "scopeKind": "class"}, {"_type": "tag", "name": "next_follow_up", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def next_follow_up(self, conversation: Conversation) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, conversation: Conversation)", "scope": "AIConversationHelper", "scopeKind": "class"}, {"_type": "tag", "name": "save_text_file", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def save_text_file(self, filename: str, content: str) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "member", "signature": "(self, filename: str, content: str)", "scope": "LocalNoteStorage", "scopeKind": "class"}, {"_type": "tag", "name": "start_conversation", "path": "/home/kavia/workspace/code-generation/patient-health-inquiry-and-note-management-2974-2983/chatbot_backend/api/services.py", "pattern": "/^    def start_conversation(self, patient_id: str, metadata: dict | None = None) -> Conversation:$/", "language": "Python", "typeref": "typename:Conversation", "kind": "member", "signature": "(self, patient_id: str, metadata: dict | None = None)", "scope": "ConversationManager", "scopeKind": "class"}], "hash": "9d59672cbbdff53f749aee4060a91896", "format-version": 4, "code-base-name": "chatbot_backend", "filename": "chatbot_backend/api/services.py"}